@page "/game/{id}"
@using ChessVariants.Shared.Base
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@implements IAsyncDisposable

<div class="form-group">
    <label>
        @Id:
        <input @bind="userInput" />
    </label>
</div>
<div class="form-group">
    <label>
        Message:
        <input @bind="selX" size="50" />
        <input @bind="selY" size="50" />
    </label>
</div>
<button @onclick="Send" disabled="@(!IsConnected)">Send</button>

<hr>

<ul id="messagesList">
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    [Parameter]
    public string Id { get; set; }
    private HubConnection hubConnection;
    private List<Move> messages = new List<Move>();
    private int selX = 4;
    private int selY = 4;
    private string userInput;
    private string messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/gamehub"))
            .Build();

        hubConnection.On<Move>("ExecuteMove", (message) =>
        {
            messages.Add(message);
            StateHasChanged();
        });

        await hubConnection.StartAsync();

        await hubConnection.SendAsync("JoinRoom", Id);
    }

    Task Send() =>
        hubConnection.SendAsync("SendMove", Id, 
            new Move(
                new Position(selX, selY), 
                new Position(4, 5)
            )
        );

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        await hubConnection.SendAsync("LeaveRoom", Id);
        await hubConnection.DisposeAsync();
    }
}